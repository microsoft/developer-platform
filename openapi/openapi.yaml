openapi: 3.0.1
info:
  title: Developer Platform API
  description: API for working with the Developer Platform.
  contact:
    name: Platform Engineering
    url: https://github.com/microsoft/developer-platform/issues/new
    email: colbyw@microsoft.com
  license:
    name: The Developer Platform is licensed under the MIT License
    url: https://github.com/microsoft/developer-platform/blob/main/LICENSE
  version: v1
paths:
  /entities:
    post:
      tags:
        - 'Microsoft.Developer.Api, Version=0.0.1.0, Culture=neutral, PublicKeyToken=null'
      operationId: Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateRequest'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DurableTaskResult'
    get:
      tags:
        - 'Microsoft.Developer.Api, Version=0.0.1.0, Culture=neutral, PublicKeyToken=null'
      operationId: GetEntities
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity'
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity'
  '/status/{instanceId}':
    get:
      tags:
        - 'Microsoft.Developer.Api, Version=0.0.1.0, Culture=neutral, PublicKeyToken=null'
      operationId: GetStatus
      parameters:
        - name: instanceId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DurableTaskResult'
        '410':
          description: Gone
        '404':
          description: Not Found
  '/entities/{kind}':
    get:
      tags:
        - 'Microsoft.Developer.Api, Version=0.0.1.0, Culture=neutral, PublicKeyToken=null'
      operationId: GetEntitiesByKind
      parameters:
        - name: kind
          in: path
          required: true
          style: simple
          schema:
            pattern: '^[a-zA-Z][a-z0-9A-Z]*$'
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity'
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity'
  '/entities/{kind}/{namespace}/{name}':
    get:
      tags:
        - 'Microsoft.Developer.Api, Version=0.0.1.0, Culture=neutral, PublicKeyToken=null'
      operationId: GetEntity
      parameters:
        - name: kind
          in: path
          required: true
          style: simple
          schema:
            pattern: '^[a-zA-Z][a-z0-9A-Z]*$'
            type: string
        - name: namespace
          in: path
          required: true
          style: simple
          schema:
            pattern: '^[a-z0-9]+(?:\-+[a-z0-9]+)*$'
            type: string
        - name: name
          in: path
          required: true
          style: simple
          schema:
            pattern: '^([A-Za-z0-9][-A-Za-z0-9_.]*)[A-Za-z0-9]$'
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Entity'
        '404':
          description: Not Found
components:
  schemas:
    DurableTaskResult:
      type: object
      properties:
        id:
          type: string
          nullable: true
      additionalProperties: false
    Entity:
      required:
        - apiVersion
        - kind
        - metadata
        - spec
      type: object
      properties:
        apiVersion:
          maxLength: 253
          minLength: 1
          type: string
          description: The version of specification format for this particular entity that this is written against.
          default: developer.microsoft.com/v1
          example: developer.microsoft.com/v1
        kind:
          maxLength: 63
          minLength: 1
          pattern: '^[a-zA-Z][a-z0-9A-Z]*$'
          type: string
          description: The high level entity type being described.
          example: kind
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          oneOf:
            - $ref: '#/components/schemas/Spec'
            - $ref: '#/components/schemas/TemplateSpec'
            - $ref: '#/components/schemas/UserSpec'
          description: The specification data describing the entity itself.
        status:
          $ref: '#/components/schemas/Status'
        relations:
          type: array
          items:
            $ref: '#/components/schemas/Relation'
          description: The relations that this entity has with other entities.
          nullable: true
      additionalProperties: false
    EntityPlan:
      type: object
      properties:
        kind:
          maxLength: 63
          minLength: 1
          pattern: '^[a-zA-Z][a-z0-9A-Z]*$'
          type: string
          description: The kind of the resulting entity.
          example: kind
        namespace:
          maxLength: 63
          minLength: 1
          pattern: '^[a-z0-9]+(?:\-+[a-z0-9]+)*$'
          type: string
          description: The namespace that the resulting entity will belong to.
          default: default
          example: namespace
        labels:
          type: object
          additionalProperties:
            type: string
          description: A map of key-value pairs of identifying information for the resulting entity.
          nullable: true
      additionalProperties: false
    EntityRef:
      required:
        - name
      type: object
      properties:
        kind:
          maxLength: 63
          minLength: 1
          pattern: '^[a-zA-Z][a-z0-9A-Z]*$'
          type: string
          description: The high level entity type being described.
          example: kind
        name:
          maxLength: 63
          minLength: 1
          pattern: '^([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$'
          type: string
          description: 'The name of the entity. Must be unique within the catalog at any given point in time, for any given namespace + kind pair.'
          example: name
        namespace:
          maxLength: 63
          minLength: 1
          pattern: '^[a-z0-9]+(?:\-+[a-z0-9]+)*$'
          type: string
          description: The namespace that the entity belongs to.
          default: default
          example: namespace
      additionalProperties: false
      description: A reference by name to another entity.
      example: '{kind}:[{namespace}/]{name}'
    Link:
      required:
        - url
      type: object
      properties:
        url:
          minLength: 1
          type: string
          description: A url in a standard uri format
          example: https://example.com/some/page
        title:
          type: string
          description: A user friendly display name for the link.
          nullable: true
          example: Documentation
        icon:
          type: string
          description: A key representing a visual icon to be displayed in the UI.
          nullable: true
          example: file
        type:
          type: string
          description: An optional value to categorize links into specific groups.
          nullable: true
          example: docs
      additionalProperties: false
      description: External hyperlink related to an entity.
    Metadata:
      required:
        - name
        - provider
      type: object
      properties:
        name:
          maxLength: 63
          minLength: 1
          pattern: '^([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$'
          type: string
          description: 'The name of the entity. Must be unique within the catalog at any given point in time, for any given namespace + kind pair.'
          example: name
        namespace:
          maxLength: 63
          minLength: 1
          pattern: '^[a-z0-9]+(?:\-+[a-z0-9]+)*$'
          type: string
          description: The namespace that the entity belongs to.
          default: default
          example: namespace
        provider:
          minLength: 1
          type: string
          description: The ID of the provider of the entity.
          example: github.com
        uid:
          type: string
          description: A unique identifier for the entity.
          nullable: true
          example: 6d96252c-a735-497a-b90e-27fbd799e9c6
        tenant:
          type: string
          description: The tenant ID of the user who created the entity.
          nullable: true
          example: 6d96252c-a735-497a-b90e-27fbd799e9c6
        title:
          type: string
          description: A display name for the entity that is suitable for presentation to a user.
          nullable: true
        description:
          type: string
          description: 'A short (typically relatively few words, on one line) description of the entity.'
          nullable: true
        labels:
          type: object
          additionalProperties:
            type: string
          description: A map of key-value pairs of identifying information for the entity.
          nullable: true
        annotations:
          type: object
          additionalProperties:
            type: string
          description: A map of key-value pairs of non-identifying information for the entity.
          nullable: true
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          description: A list of external hyperlinks related to the entity.
          nullable: true
        tags:
          type: array
          items:
            type: string
          description: A list of single-value tags for the entity.
          nullable: true
      description: Metadata common to all versions/kinds of entities.
    Relation:
      required:
        - targetRef
        - type
      type: object
      properties:
        type:
          minLength: 1
          type: string
          description: The type of relation.
        targetRef:
          oneOf:
            - $ref: '#/components/schemas/EntityRef'
            - type: string
              description: A reference by name to another entity.
              example: '{kind}:[{namespace}/]{name}'
      additionalProperties: false
      description: A directed relation from one entity to another.
    Spec:
      type: object
      description: The specification data describing the entity itself.
    Status:
      type: object
      description: The current status of the entity.
    TemplateRequest:
      required:
        - inputJson
        - provider
        - templateRef
      type: object
      properties:
        templateRef:
          oneOf:
            - $ref: '#/components/schemas/EntityRef'
            - type: string
              description: A reference by name to another entity.
              example: '{kind}:[{namespace}/]{name}'
          description: A reference by name to a template.
          example: 'template:[{namespace}/]{name}'
        provider:
          minLength: 1
          type: string
          description: The ID of the provider of the template.
        inputJson:
          minLength: 1
          type: string
          description: The input JSON to the template.
      additionalProperties: false
    TemplateResponse:
      required:
        - entities
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/EntityRef'
          description: References to the entities created.
          example: '[repo:[{namespace}/]{name}]'
      additionalProperties: false
    TemplateSpec:
      type: object
      allOf:
        - $ref: '#/components/schemas/Spec'
      properties:
        inputJsonSchema:
          type: string
          description: A JSON Schema that defines user inputs for a template.
          nullable: true
        inputUiSchema:
          type: string
          nullable: true
        creates:
          type: array
          items:
            $ref: '#/components/schemas/EntityPlan'
          description: Details of the entities that the template creates.
          nullable: true
      description: The specification data describing the template.
    UserProfile:
      type: object
      properties:
        displayName:
          type: string
          description: A simple display name to present to users.
          nullable: true
          example: John Doe
        jobTitle:
          type: string
          description: The job title of the user.
          nullable: true
        email:
          type: string
          description: The email address of the user.
          nullable: true
          example: john.doe@email.com
      description: The profile of the user.
    UserRole:
      enum:
        - None
        - Member
        - Admin
        - Owner
        - Provider
      type: string
      description: The role of the user.
    UserSpec:
      type: object
      allOf:
        - $ref: '#/components/schemas/Spec'
      properties:
        role:
          $ref: '#/components/schemas/UserRole'
        profile:
          $ref: '#/components/schemas/UserProfile'
        memberOf:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/EntityRef'
              - type: string
                description: A reference by name to another entity.
                example: '{kind}:[{namespace}/]{name}'
          nullable: true
      description: The specification data describing the user.
  securitySchemes:
    AADToken:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com//oauth2/v2.0/authorize
          scopes:
            api:///.default: Access to the API project
security:
  - AADToken:
      - api:///.default