name: Release Website

on:
  push:
    branches: [main]
    paths:
      # the version number changes in version.txt
      # so only release if that file has changed
      - "web/version.txt"

env:
  WORKING_DIRECTORY: ./web
  IMAGE_REGISTRY: ${{ vars.REGISTRY_URL || 'ghcr.io' }}
  IMAGE_REPOSITORY: ${{ vars.REGISTRY_REPOSITORY || github.repository }}

jobs:
  build:
    # only build and push if this is not a pull request
    if: ${{ github.event_name != 'pull_request' }}
    name: Create new Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup
        id: setup
        run: |
          BUILD_DATE="`date -u +"%Y-%m-%dT%H:%M:%SZ"`" && echo "date=$BUILD_DATE" >> $GITHUB_OUTPUT
          IMAGE_VERSION=$(cat ./web/version.txt) && echo "version=$IMAGE_VERSION" >> $GITHUB_OUTPUT

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Version
        working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          IMAGE_VERSION: ${{ steps.setup.outputs.version }}
        run: |
          npm config set commit-hooks false
          npm config set git-tag-version false
          npm version ${{ env.IMAGE_VERSION }}

      - name: Build
        working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          REACT_APP_VERSION: ${{ steps.setup.outputs.version }}
        run: |
          npm ci
          npm run build

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ vars.REGISTRY_USERNAME || github.actor }}
          password: ${{ secrets.REGISTRY_PASSWORD || secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        env:
          BUILD_DATE: ${{ steps.setup.outputs.date }}
          IMAGE_VERSION: ${{ steps.setup.outputs.version }}
          IMAGE_NAME: website
        with:
          # only build and push if this is not a pull request
          push: ${{ github.event_name != 'pull_request' }}
          file: ${{ env.WORKING_DIRECTORY }}/Dockerfile
          context: ${{ env.WORKING_DIRECTORY }}
          build-args: |
            BUILD_DATE=${{ env.BUILD_DATE }}
            IMAGE_VERSION=${{ env.IMAGE_VERSION }}
          tags: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}